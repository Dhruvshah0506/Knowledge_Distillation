#!/usr/bin/env python3
"""
Setup script for QA Augmentation Pipeline
Helps users configure their environment variables
"""
import os
import sys
from dotenv import load_dotenv

def create_env_file():
    """Create a .env file with user input."""
    print("QA Augmentation Pipeline - Environment Setup")
    print("=" * 50)
    print("This script will help you set up your environment variables.")
    print("You'll need:")
    print("1. Hugging Face token (for Llama3 and Mistral models)")
    print("2. 6 Gemini API keys (for rotation and rate limiting)")
    print()
    
    # Get Hugging Face token
    hf_token = input("Enter your Hugging Face token: ").strip()
    
    # Get Gemini API keys
    gemini_keys = []
    for i in range(1, 7):
        key = input(f"Enter Gemini API key {i}: ").strip()
        if key:
            gemini_keys.append(key)
    
    # Create .env file content
    env_content = f"""# QA Augmentation Pipeline Environment Variables
# Generated by setup_env.py

# Hugging Face token for Llama3 and Mistral models
HUGGINGFACE_TOKEN={hf_token}

# Gemini API keys for rotation and rate limiting
"""
    
    # Add Gemini keys
    for i, key in enumerate(gemini_keys, 1):
        env_content += f"GEMINI_API_KEY_{i}={key}\n"
    
    # Add placeholder keys for missing ones
    for i in range(len(gemini_keys) + 1, 7):
        env_content += f"GEMINI_API_KEY_{i}=your_gemini_api_key_{i}_here\n"
    
    # Write to .env file
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print(f"\nEnvironment file created: .env")
    print(f"Found {len(gemini_keys)} Gemini API keys")
    print("You can now run the augmentation pipeline!")

def check_env_setup():
    """Check if environment variables are properly set."""
    load_dotenv()
    
    print("Checking environment setup...")
    print("=" * 30)
    
    # Check Hugging Face token
    hf_token = os.getenv('HUGGINGFACE_TOKEN')
    if hf_token and hf_token != 'your_huggingface_token_here':
        print("✓ Hugging Face token found")
    else:
        print("✗ Hugging Face token missing or invalid")
    
    # Check Gemini keys
    gemini_keys = []
    for i in range(1, 7):
        key = os.getenv(f'GEMINI_API_KEY_{i}')
        if key and key.strip() and key != f'your_gemini_api_key_{i}_here':
            gemini_keys.append(key)
            print(f"✓ Gemini API key {i} found")
        else:
            print(f"✗ Gemini API key {i} missing or invalid")
    
    print(f"\nTotal valid Gemini keys: {len(gemini_keys)}/6")
    
    # Summary
    missing_vars = []
    if not hf_token or hf_token == 'your_huggingface_token_here':
        missing_vars.append('Hugging Face token')
    if len(gemini_keys) == 0:
        missing_vars.append('Gemini API keys')
    
    if missing_vars:
        print(f"\nMissing environment variables: {', '.join(missing_vars)}")
        print("Please run 'python3 setup_env.py' to set up your environment.")
        return False
    else:
        print("\nAll environment variables are properly configured!")
        return True

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "check":
        check_env_setup()
    else:
        create_env_file() 